using System.Text;
using KY.Core;
using KY.Core.DataAccess;

namespace KY.Generator.Output
{
    public class OutputWriteAction : IOutputAction
    {
        private readonly bool checkOnOverwrite;
        private bool executed;
        public string FilePath { get; }
        public string Content { get; }

        public OutputWriteAction(string filePath, string content, bool checkOnOverwrite)
        {
            this.checkOnOverwrite = checkOnOverwrite;
            this.FilePath = filePath;
            this.Content = content;
        }

        public void Execute()
        {
            if (this.executed)
            {
                return;
            }
            this.executed = true;
            FileSystem.CreateDirectory(FileSystem.Parent(this.FilePath));
            if (!FileSystem.FileExists(this.FilePath))
            {
                Logger.Trace($"Write file {this.FilePath}");
                this.WriteFile();
                return;
            }
            string content = FileSystem.ReadAllText(this.FilePath);
            if (this.Content == content)
            {
                Logger.Trace($"File has no changes {this.FilePath}");
            }
            else if (content.Length == 0 || !this.checkOnOverwrite || this.IsGeneratedFile(content))
            {
                Logger.Trace($"Overwrite file {this.FilePath}");
                this.WriteFile();
            }
            else
            {
                Logger.Error($"Can not overwrite file {this.FilePath}. File to overwrite is not a generated file. Delete file manually or set CheckOnOverwrite = false, to force overwrite all files");
            }
        }

        private void WriteFile()
        {
            FileSystem.WriteAllText(this.FilePath, this.Content, Encoding.UTF8);
        }

        private bool IsGeneratedFile(string content)
        {
            return content.Contains("<auto-generated>");
        }
    }
}