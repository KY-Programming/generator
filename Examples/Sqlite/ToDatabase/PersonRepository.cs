// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated with KY.Generator 7.0.0.0
//
//      Manual changes to this file may cause unexpected behavior in your application.
//      Manual changes to this file will be overwritten if the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
// ReSharper disable All

using System;
using Microsoft.Data.Sqlite;

namespace ToDatabase
{
    public partial class PersonRepository
    {
        private SqliteConnection connection;

        public PersonRepository(SqliteConnection connection)
        {
            this.connection = connection;
        }

        public void CreateTable()
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
CREATE TABLE IF NOT EXISTS Person
(
    Id INTEGER primary key autoincrement,
    FirstName TEXT not null,
    LastName TEXT not null,
    Birthday TEXT,
    Age INTEGER,
    Address TEXT
);";
            command.ExecuteNonQuery();
        }

        public void DropTable()
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"DROP TABLE IF EXISTS Person;";
            command.ExecuteNonQuery();
        }

        public Int32 Insert(Person entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"INSERT INTO Person (FirstName, LastName, Birthday, Age, Address) VALUES (@firstName, @lastName, @birthday, @age, @address);
SELECT last_insert_rowid();";
            command.Parameters.Add(new SqliteParameter("@firstName", entry.FirstName));
            command.Parameters.Add(new SqliteParameter("@lastName", entry.LastName));
            command.Parameters.Add(new SqliteParameter("@birthday", entry.Birthday));
            command.Parameters.Add(new SqliteParameter("@age", entry.Age));
            command.Parameters.Add(new SqliteParameter("@address", entry.Address ?? (object) DBNull.Value));
            return (Int32)(long) command.ExecuteScalar();
        }

        public void Update(Person entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
UPDATE Person
SET FirstName = @firstName,
    LastName = @lastName,
    Birthday = @birthday,
    Age = @age,
    Address = @address
WHERE Id = @id";
            command.Parameters.Add(new SqliteParameter("@id", entry.Id));
            command.Parameters.Add(new SqliteParameter("@firstName", entry.FirstName));
            command.Parameters.Add(new SqliteParameter("@lastName", entry.LastName));
            command.Parameters.Add(new SqliteParameter("@birthday", entry.Birthday));
            command.Parameters.Add(new SqliteParameter("@age", entry.Age));
            command.Parameters.Add(new SqliteParameter("@address", entry.Address ?? (object) DBNull.Value));
            command.ExecuteNonQuery();
        }

        public void Delete(Person entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
DELETE FROM Person
WHERE Id = @id";
            command.Parameters.Add(new SqliteParameter("@id", entry.Id));
            command.ExecuteNonQuery();
        }
    }
}

// outputid:29625c26-0a17-4256-95a5-3f1886bd4181
