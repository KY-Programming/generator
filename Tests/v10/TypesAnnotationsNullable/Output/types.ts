/* eslint-disable */
// tslint:disable

import { GenericSubType } from "./generic-sub-type";
import { SubType } from "./sub-type";

export class Types {
    public static readonly constString: string = "String";
    public static readonly constShort: number = 1;
    public static readonly constUShort: number = 2;
    public static readonly constInt: number = 3;
    public static readonly constUInt: number = 4;
    public static readonly constLong: number = 5;
    public static readonly constULong: number = 6;
    public static readonly constFloat: number = 7.1;
    public static readonly constDouble: number = 8.2;
    public static readonly constBool: boolean = true;
    public static readonly constByte: number = 9;
    public static readonly constSByte: number = 10;
    public stringField?: string;
    public intField?: number;
    public dateTimeField?: Date;
    public defaultString: string = "Default";
    public defaultShort: number = 1;
    public defaultUShort: number = 2;
    public defaultInt: number = 3;
    public defaultUInt: number = 4;
    public defaultLong: number = 5;
    public defaultULong: number = 6;
    public defaultFloat: number = 7.1;
    public defaultDouble: number = 8.2;
    public defaultBool: boolean = true;
    public defaultNullableString?: string = "Default";
    public defaultNullableShort?: number = 1;
    public defaultNullableUShort?: number = 2;
    public defaultNullableInt?: number = 3;
    public defaultNullableUInt?: number = 4;
    public defaultNullableLong?: number = 5;
    public defaultNullableULong?: number = 6;
    public defaultNullableFloat?: number = 7.1;
    public defaultNullableDouble?: number = 8.2;
    public defaultNullableBool?: boolean = true;
    public requiredStringProperty: string = "";
    public requiredShortProperty: number = 0;
    public requiredUShortProperty: number = 0;
    public requiredIntProperty: number = 0;
    public requiredUIntProperty: number = 0;
    public requiredLongProperty: number = 0;
    public requiredULongProperty: number = 0;
    public requiredFloatProperty: number = 0;
    public requiredDoubleProperty: number = 0;
    public requiredBoolProperty: boolean = false;
    public requiredObjectProperty: unknown | undefined;
    public requiredByteProperty: number = 0;
    public requiredSByteProperty: number = 0;
    public requiredAttributeStringProperty: string = "";
    public requiredAttributeShortProperty: number = 0;
    public requiredAttributeUShortProperty: number = 0;
    public requiredAttributeIntProperty: number = 0;
    public requiredAttributeUIntProperty: number = 0;
    public requiredAttributeLongProperty: number = 0;
    public requiredAttributeULongProperty: number = 0;
    public requiredAttributeFloatProperty: number = 0;
    public requiredAttributeDoubleProperty: number = 0;
    public requiredAttributeBoolProperty: boolean = false;
    public requiredAttributeObjectProperty: unknown | undefined;
    public requiredAttributeByteProperty: number = 0;
    public requiredAttributeSByteProperty: number = 0;
    public stringProperty: string = "";
    public shortProperty: number = 0;
    public uShortProperty: number = 0;
    public intProperty: number = 0;
    public uIntProperty: number = 0;
    public longProperty: number = 0;
    public uLongProperty: number = 0;
    public floatProperty: number = 0;
    public doubleProperty: number = 0;
    public boolProperty: boolean = false;
    public objectProperty: unknown | undefined;
    public byteProperty: number = 0;
    public sByteProperty: number = 0;
    public nullableStringProperty?: string;
    public nullableBoolProperty?: boolean;
    public nullableShortProperty?: number;
    public nullableUShortProperty?: number;
    public nullableIntProperty?: number;
    public nullableUIntProperty?: number;
    public nullableLongProperty?: number;
    public nullableULongProperty?: number;
    public nullableFloatProperty?: number;
    public nullableDoubleProperty?: number;
    public nullable2BoolProperty?: boolean;
    public nullable2ShortProperty?: number;
    public nullable2UShortProperty?: number;
    public nullable2IntProperty?: number;
    public nullable2UIntProperty?: number;
    public nullable2LongProperty?: number;
    public nullable2ULongProperty?: number;
    public nullable2FloatProperty?: number;
    public nullable2DoubleProperty?: number;
    public systemStringProperty: string = "";
    public systemInt16Property: number = 0;
    public systemInt32Property: number = 0;
    public systemInt64Property: number = 0;
    public systemSingleProperty: number = 0;
    public systemDoubleProperty: number = 0;
    public systemDateTimeProperty: Date = new Date(0);
    public systemArrayProperty: [] = [];
    public systemByteProperty: number = 0;
    public systemSByteProperty: number = 0;
    public systemCharProperty: number = 0;
    public systemDecimalProperty: number = 0;
    public systemGuidProperty: string = "00000000-0000-0000-0000-000000000000";
    public systemObjectProperty: unknown | undefined;
    public systemTimeSpanProperty: string | undefined;
    public systemUInt16Property: number = 0;
    public systemUInt32Property: number = 0;
    public systemUInt64Property: number = 0;
    public subTypeProperty: SubType | undefined;
    public stringArrayProperty: string[] = [];
    public intArrayProperty: number[] = [];
    public byteArrayProperty: number[] = [];
    public systemDateTimeArrayProperty: Date[] = [];
    public subTypeArrayProperty: SubType[] | undefined;
    public stringList: string[] = [];
    public subTypeList: SubType[] = [];
    public stringIList: string[] = [];
    public subTypeIList: SubType[] = [];
    public stringIEnumerable: string[] = [];
    public subTypeIEnumerable: SubType[] = [];
    public stringIReadOnlyList: string[] = [];
    public subTypeIReadOnlyList: SubType[] = [];
    public stringICollection: string[] = [];
    public subTypeICollection: SubType[] = [];
    public stringIReadOnlyCollection: string[] = [];
    public subTypeIReadOnlyCollection: SubType[] = [];
    public stringStringDictionary: { [key: string]: string; } = {};
    public intStringDictionary: { [key: number]: string; } = {};
    public stringSubTypeDictionary: { [key: string]: SubType; } = {};
    public intSubTypeDictionary: { [key: number]: SubType; } = {};
    public subTypeStringDictionary: { /* unsupported type for key. Expected string or number. Got 'SubType'. */ } = {};
    public stringStringIDictionary: { [key: string]: string; } = {};
    public stringStringIReadOnlyDictionary: { [key: string]: string; } = {};
    public genericSubType: GenericSubType<string, number> | undefined;
    public readonlyProperty: string = "";
    public writeonlyProperty: string = "";

    public constructor(init?: Partial<Types>) {
        Object.assign(this, init);
    }
}

// outputid:f13dd313-1bd6-4a8e-9b3f-d6266d3a25ff
