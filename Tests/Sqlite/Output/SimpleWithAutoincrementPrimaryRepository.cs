// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated with KY.Generator 7.1.0.0
//
//      Manual changes to this file may cause unexpected behavior in your application.
//      Manual changes to this file will be overwritten if the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
// ReSharper disable All

using System;
using Microsoft.Data.Sqlite;

namespace Sqlite.Models
{
    public partial class SimpleWithAutoincrementPrimaryRepository
    {
        private SqliteConnection connection;

        public SimpleWithAutoincrementPrimaryRepository(SqliteConnection connection)
        {
            this.connection = connection;
        }

        public void CreateTable()
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
CREATE TABLE IF NOT EXISTS SimpleWithAutoincrementPrimary
(
    Id INTEGER primary key autoincrement,
    StringProperty TEXT
);";
            command.ExecuteNonQuery();
        }

        public void DropTable()
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"DROP TABLE IF EXISTS SimpleWithAutoincrementPrimary;";
            command.ExecuteNonQuery();
        }

        public Int32 Insert(SimpleWithAutoincrementPrimary entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"INSERT INTO SimpleWithAutoincrementPrimary (StringProperty) VALUES (@stringProperty);
SELECT last_insert_rowid();";
            command.Parameters.Add(new SqliteParameter("@stringProperty", entry.StringProperty ?? (object) DBNull.Value));
            return (Int32)(long) command.ExecuteScalar();
        }

        public void Update(SimpleWithAutoincrementPrimary entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
UPDATE SimpleWithAutoincrementPrimary
SET StringProperty = @stringProperty
WHERE Id = @id";
            command.Parameters.Add(new SqliteParameter("@id", entry.Id));
            command.Parameters.Add(new SqliteParameter("@stringProperty", entry.StringProperty ?? (object) DBNull.Value));
            command.ExecuteNonQuery();
        }

        public void Delete(SimpleWithAutoincrementPrimary entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
DELETE FROM SimpleWithAutoincrementPrimary
WHERE Id = @id";
            command.Parameters.Add(new SqliteParameter("@id", entry.Id));
            command.ExecuteNonQuery();
        }
    }
}

// outputid:6427c6f2-0748-4a76-ab86-205288cc2080
