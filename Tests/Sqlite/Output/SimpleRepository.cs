// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated with KY.Generator 7.0.0.0
//
//      Manual changes to this file may cause unexpected behavior in your application.
//      Manual changes to this file will be overwritten if the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
// ReSharper disable All

using System;
using Microsoft.Data.Sqlite;

namespace Sqlite.Models
{
    public partial class SimpleRepository
    {
        private SqliteConnection connection;

        public SimpleRepository(SqliteConnection connection)
        {
            this.connection = connection;
        }

        public void CreateTable()
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
CREATE TABLE IF NOT EXISTS Simple
(
    StringProperty TEXT,
    NullableStringProperty TEXT not null
);";
            command.ExecuteNonQuery();
        }

        public void DropTable()
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"DROP TABLE IF EXISTS Simple;";
            command.ExecuteNonQuery();
        }

        public void Insert(Simple entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"INSERT INTO Simple (StringProperty, NullableStringProperty) VALUES (@stringProperty, @nullableStringProperty);";
            command.Parameters.Add(new SqliteParameter("@stringProperty", entry.StringProperty ?? (object) DBNull.Value));
            command.Parameters.Add(new SqliteParameter("@nullableStringProperty", entry.NullableStringProperty));
            command.ExecuteNonQuery();
        }

        public void Delete(Simple entry)
        {
            using SqliteCommand command = this.connection.CreateCommand();
            command.CommandText = @"
DELETE FROM Simple
WHERE StringProperty = @stringProperty AND
    NullableStringProperty = @nullableStringProperty";
            command.Parameters.Add(new SqliteParameter("@stringProperty", entry.StringProperty ?? (object) DBNull.Value));
            command.Parameters.Add(new SqliteParameter("@nullableStringProperty", entry.NullableStringProperty));
            command.ExecuteNonQuery();
        }
    }
}

// outputid:cf81755c-700e-4a03-b453-609309187e6b
